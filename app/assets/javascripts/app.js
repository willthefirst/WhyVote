// Generated by CoffeeScript 1.3.3
(function() {
  var HomeController;

  Array.prototype.merge = function(other) {
    return Array.prototype.push.apply(this, other);
  };

  HomeController = function($scope, $window, $location, $http) {
    $scope.select_submit = function() {
      window.scrollTo(0, 0);
      angular.element('#posts').hide();
      return angular.element('#submit').fadeIn();
    };
    $scope.select_candidate = function(candidate) {
      $scope.candidate = candidate;
      angular.element('.candidate').removeClass('selected');
      angular.element('#' + candidate).addClass('selected');
      angular.element('.candidate').hide();
      return angular.element('.selected').show();
    };
    $scope.select_close = function() {
      return angular.element('.disclaimer').fadeOut();
    };
    $scope.back = function() {
      angular.element('#submit').fadeOut();
      return angular.element('#posts').show();
    };
    $scope.submit = function() {
      return $http({
        method: 'POST',
        url: '/posts',
        data: $.param({
          post: {
            reason: this.reason,
            candidate: this.candidate
          },
          user: {
            fingerprint: jQuery.fingerprint(),
            email: this.email
          }
        }),
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        }
      }).success(function(rsp, status, headers) {
        if (rsp.success) {
          angular.element('section#submit').hide();
          angular.element('.call-to-action, .fixed-button').hide();
          angular.element('.disclaimer').show();
          angular.element('section#posts').fadeIn();
          window.scrollTo(0, 0);
          rsp.post.votes = 1;
          return $scope.posts.unshift(rsp.post);
        }
      });
    };
    $scope.vote = function(post) {
      return $http.post('/vote', {
        post: post,
        fingerprint: jQuery.fingerprint()
      }).success(function(rsp) {
        var num, votes;
        if (rsp.success) {
          votes = angular.element('#post' + post.id).find('.votes');
          num = parseInt(votes.attr('orig')) + 1;
          return votes.html(num);
        }
      });
    };
    return $http.get('/posts.json?fingerprint=' + jQuery.fingerprint()).success(function(rsp) {
      _.each(rsp, function(post) {
        post.votes = _.filter(post.votes, function(vote) {
          return vote.positive;
        }).length;
        if (!(post.reason[0] === 'I' || post.reason.slice(0, 6) === 'Barack' || post.reason.slice(0, 5) === 'Obama' || post.reason.slice(0, 4) === 'Mitt' || post.reason.slice(0, 6) === 'Romney' || post.reason.slice(0, 4) === 'Gary' || post.reason.slice(0, 7) === 'Johnson' || post.reason.slice(0, 3) === 'God')) {
          return post.reason = post.reason[0].toLowerCase() + post.reason.slice(1, post.reason.length);
        }
      });
      return $scope.posts = rsp;
    });
  };

  angular.module('why-vote', ['ngCookies']).directive('vote', function() {
    return function(scope, element, attrs) {
      var votes;
      votes = element.find('.votes');
      if ($("html").hasClass("no-touch")) {
        $(".hoverable").addClass("hover");
      }
      if (!Modernizr.touch) {
        return element.on({
          mouseenter: function() {
            votes.attr('orig', votes.html());
            return votes.html('<--');
          },
          mouseleave: function() {
            if (votes.html() === '&lt;--') {
              return votes.html(votes.attr('orig'));
            }
          }
        });
      } else {
        return element.on({
          touchstart: function() {
            return votes.attr('orig', votes.html());
          }
        });
      }
    };
  }).config([
    '$routeProvider', '$locationProvider', '$httpProvider', function($routeProvider, $locationProvider, $httpProvider) {
      $routeProvider.when('/', {
        templateUrl: '/partials/home.html',
        controller: HomeController
      }).otherwise({
        redirectTo: '/'
      });
      return $locationProvider.html5Mode(true);
    }
  ]);

}).call(this);
